[buildout]
extends =
    http://dist.plone.org/release/4.2.1/versions.cfg
    rabbitmq.cfg
eggs =
    Plone
    Pillow
    pubsubannouncements
    sauna.reload
parts +=
    instance
    robot
    test
    coverage
    docs
develop = .
versions=versions

extensions = mr.developer
auto-checkout =
    collective.zamqp
    sphinxcontrib-robotdoc
sources-dir = ${:parts-directory}
sources = sources

[versions]
zc.buildout = 1.6.3
distribute = 0.6.29

[sources]
collective.zamqp = git http://github.com/datakurre/collective.zamqp.git
sphinxcontrib-robotdoc = git http://github.com/datakurre/sphinxcontrib-robotdoc.git

[env]
recipe = gocept.recipe.env

[instance]
recipe = plone.recipe.zope2instance
effective-user = ${env:USER}
http-address = 8080
user = admin:admin
eggs = ${buildout:eggs}
zope-conf-additional =
   %import sauna.reload
   %import collective.zamqp
   <amqp-broker-connection>
       connection_id example
       heartbeat 120
       keepalive 30
   </amqp-broker-connection>
   <amqp-consuming-server>
       connection_id example
       site_id Plone
   </amqp-consuming-server>

[test]
recipe = zc.recipe.testrunner
eggs = pubsubannouncements[test]
initialization =
    import rabbitfixture.server
    rabbitfixture.server.RABBITBIN = "${buildout:parts-directory}/rabbitmq/scripts"
    os.environ["PATH"] = "%s:%s" % ("${erlang:location}/bin", os.environ["PATH"])
defaults = ['--auto-color', '--auto-progress']

[coverage]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

[docs]
recipe = zc.recipe.egg
eggs = pubsubannouncements[docs]
dependent-scripts = true
scripts = sphinx-build

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[reload]
initialization =
    import os
    ${test:initialization}
